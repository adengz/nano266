#!/usr/bin/env python

__author__ = 'Zhi Deng'
__version__ = 1.0
__date__ = 'May 23, 2015'

import os
import glob
import subprocess
import argparse

def write_tscc_script(walltime):
    jobname = glob.glob('*.pw.in')[0][:-6]
    pwd = os.getcwd()
    user = os.environ['USER']
    t = '''#!/bin/bash
#PBS -q glean
#PBS -N {name}
#PBS -l nodes=1:ppn=4
#PBS -l walltime={h}:00:00
#PBS -o job.out
#PBS -e job.err
#PBS -V
#PBS -M {user}@ucsd.edu
#PBS -m b
#PBS -A ong-group
#PBS -d {dir}

CURR_DIR=`pwd`

SCRATCH=/oasis/tscc/scratch/{user}/{name}
mkdir $SCRATCH
cp * $SCRATCH
ln -s $SCRATCH scratch
cd $SCRATCH
mkdir tmp

mpirun -machinefile $PBS_NODEFILE -np 4 pw.x -inp {name}.pw.in > {name}.out

rm -r tmp
mv * $CURR_DIR
cd $CURR_DIR
rm scratch
rm -r $SCRATCH
'''
    with open('tscc_script','w') as f:
        f.write(t.format(name=jobname, dir=pwd, h=walltime, user=user))

def proc_dir(d,walltime):
    CWD = os.getcwd()
    os.chdir(d)
    write_tscc_script(walltime)
    subprocess.call(['qsub','tscc_script'])
    os.chdir(CWD)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="""
        Tool for submitting PWSCF jobs using templates on TSCC.
        Usage is similar to qsend. Prerogative for MAVRLers.""",
        epilog="""
    Author: {}
    Version: {}
    Last updated: {}""".format(__author__, __version__, __date__))

    parser.add_argument("directories", metavar="dir",
                        type=str, nargs='+',
                        help='directories to process')

    parser.add_argument("-w", "--walltime", dest="walltime", type=int,
                        nargs="?", default=None,
                        help="Provide a walltime for the job in hours. "
                        "Defaults to 1 hour.")

    args = parser.parse_args()
    walltime = args.walltime
    if walltime == None:
        walltime = 1

    for d in args.directories:
        proc_dir(d, walltime)
